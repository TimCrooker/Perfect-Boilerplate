"use strict";

var _util = require("util");

var _ = require("./");

jest.mock('util', () => ({
  promisify: jest.fn(() => {
    throw new Error();
  })
}));
describe('Source Helper', () => {
  it('incorrect source url/path', async () => {
    const source = await (0, _.getSource)('alibaba');
    expect(source.error).toBe('Source path not valid');
  });
  it('incorrect source url/path', async () => {
    const source = await (0, _.getSource)('https://github.com/alibaba/ciftligi');
    expect(source.error).toBe('Source repository not found.');
  });
  it('correct source url', async () => {
    ;

    _util.promisify.mockImplementation(() => jest.fn());

    const source = await (0, _.getSource)('superplate-core-plugins');
    expect(source.error).toBe(undefined);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9VdGlscy9zb3VyY2UvaW5kZXguc3BlYy50cyJdLCJuYW1lcyI6WyJqZXN0IiwibW9jayIsInByb21pc2lmeSIsImZuIiwiRXJyb3IiLCJkZXNjcmliZSIsIml0Iiwic291cmNlIiwiZXhwZWN0IiwiZXJyb3IiLCJ0b0JlIiwibW9ja0ltcGxlbWVudGF0aW9uIiwidW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBQSxJQUFJLENBQUNDLElBQUwsQ0FBVSxNQUFWLEVBQWtCLE9BQU87QUFDdkJDLEVBQUFBLFNBQVMsRUFBRUYsSUFBSSxDQUFDRyxFQUFMLENBQVEsTUFBTTtBQUN2QixVQUFNLElBQUlDLEtBQUosRUFBTjtBQUNELEdBRlU7QUFEWSxDQUFQLENBQWxCO0FBS0FDLFFBQVEsQ0FBQyxlQUFELEVBQWtCLE1BQU07QUFDOUJDLEVBQUFBLEVBQUUsQ0FBQywyQkFBRCxFQUE4QixZQUFZO0FBQzFDLFVBQU1DLE1BQU0sR0FBRyxNQUFNLGlCQUFVLFNBQVYsQ0FBckI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDRCxNQUFNLENBQUNFLEtBQVIsQ0FBTixDQUFxQkMsSUFBckIsQ0FBMEIsdUJBQTFCO0FBQ0QsR0FIQyxDQUFGO0FBS0FKLEVBQUFBLEVBQUUsQ0FBQywyQkFBRCxFQUE4QixZQUFZO0FBQzFDLFVBQU1DLE1BQU0sR0FBRyxNQUFNLGlCQUFVLHFDQUFWLENBQXJCO0FBQ0FDLElBQUFBLE1BQU0sQ0FBQ0QsTUFBTSxDQUFDRSxLQUFSLENBQU4sQ0FBcUJDLElBQXJCLENBQTBCLDhCQUExQjtBQUNELEdBSEMsQ0FBRjtBQUtBSixFQUFBQSxFQUFFLENBQUMsb0JBQUQsRUFBdUIsWUFBWTtBQUNuQzs7QUFBRUosbUJBQUQsQ0FBbUJTLGtCQUFuQixDQUFzQyxNQUFNWCxJQUFJLENBQUNHLEVBQUwsRUFBNUM7O0FBRUQsVUFBTUksTUFBTSxHQUFHLE1BQU0saUJBQVUseUJBQVYsQ0FBckI7QUFDQUMsSUFBQUEsTUFBTSxDQUFDRCxNQUFNLENBQUNFLEtBQVIsQ0FBTixDQUFxQkMsSUFBckIsQ0FBMEJFLFNBQTFCO0FBQ0QsR0FMQyxDQUFGO0FBTUQsQ0FqQk8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByb21pc2lmeSB9IGZyb20gJ3V0aWwnXHJcbmltcG9ydCB7IGdldFNvdXJjZSB9IGZyb20gJy4vJ1xyXG5qZXN0Lm1vY2soJ3V0aWwnLCAoKSA9PiAoe1xyXG4gIHByb21pc2lmeTogamVzdC5mbigoKSA9PiB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoKVxyXG4gIH0pLFxyXG59KSlcclxuZGVzY3JpYmUoJ1NvdXJjZSBIZWxwZXInLCAoKSA9PiB7XHJcbiAgaXQoJ2luY29ycmVjdCBzb3VyY2UgdXJsL3BhdGgnLCBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zdCBzb3VyY2UgPSBhd2FpdCBnZXRTb3VyY2UoJ2FsaWJhYmEnKVxyXG4gICAgZXhwZWN0KHNvdXJjZS5lcnJvcikudG9CZSgnU291cmNlIHBhdGggbm90IHZhbGlkJylcclxuICB9KVxyXG5cclxuICBpdCgnaW5jb3JyZWN0IHNvdXJjZSB1cmwvcGF0aCcsIGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IHNvdXJjZSA9IGF3YWl0IGdldFNvdXJjZSgnaHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvY2lmdGxpZ2knKVxyXG4gICAgZXhwZWN0KHNvdXJjZS5lcnJvcikudG9CZSgnU291cmNlIHJlcG9zaXRvcnkgbm90IGZvdW5kLicpXHJcbiAgfSlcclxuXHJcbiAgaXQoJ2NvcnJlY3Qgc291cmNlIHVybCcsIGFzeW5jICgpID0+IHtcclxuICAgIDsocHJvbWlzaWZ5IGFzIGFueSkubW9ja0ltcGxlbWVudGF0aW9uKCgpID0+IGplc3QuZm4oKSlcclxuXHJcbiAgICBjb25zdCBzb3VyY2UgPSBhd2FpdCBnZXRTb3VyY2UoJ3N1cGVycGxhdGUtY29yZS1wbHVnaW5zJylcclxuICAgIGV4cGVjdChzb3VyY2UuZXJyb3IpLnRvQmUodW5kZWZpbmVkKVxyXG4gIH0pXHJcbn0pXHJcbiJdfQ==